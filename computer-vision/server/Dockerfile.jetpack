### Partially inspired by
### https://github.com/ultralytics/ultralytics/blob/main/docker/Dockerfile-jetson-jetpack6
FROM nvcr.io/nvidia/l4t-jetpack:r36.4.0 AS builder

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_BREAK_SYSTEM_PACKAGES=1 \
    YOLO_AUTOINSTALL="False"

# Downloads to user config dir
ADD https://github.com/ultralytics/assets/releases/download/v0.0.0/Arial.ttf \
    https://github.com/ultralytics/assets/releases/download/v0.0.0/Arial.Unicode.ttf \
    /root/.config/Ultralytics/

# Install dependencies
ADD https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/cuda-keyring_1.1-1_all.deb .
RUN dpkg -i cuda-keyring_1.1-1_all.deb && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    git python3-pip libopenmpi-dev libopenblas-base libomp-dev libcusparselt0 libcusparselt-dev ffmpeg libsm6 libxext6 \ 
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /ultralytics

# Install deps
RUN python3 -m pip install --upgrade pip uv
RUN uv pip install --system \
    https://github.com/ultralytics/assets/releases/download/v0.0.0/onnxruntime_gpu-1.20.0-cp310-cp310-linux_aarch64.whl \
    https://github.com/ultralytics/assets/releases/download/v0.0.0/torch-2.5.0a0+872d972e41.nv24.08-cp310-cp310-linux_aarch64.whl \
    https://github.com/ultralytics/assets/releases/download/v0.0.0/torchvision-0.20.0a0+afc54f7-cp310-cp310-linux_aarch64.whl
RUN uv pip install ultralytics --system --no-deps

# Remove extra build files
RUN rm -rf *.whl /root/.config/Ultralytics/

COPY requirements.txt ./
RUN uv pip install --system -r requirements.txt

COPY lib/ lib/
COPY main.py ./

EXPOSE 8000
CMD ["sh", "-c", "python main.py"]
